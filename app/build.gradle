plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'de.mannodermaus.android-junit5'
    id 'jacoco'
}

android {
    namespace 'com.worksmobile.study.coroutinestudy_seongheon'
    compileSdk 33

    defaultConfig {
        applicationId "com.worksmobile.study.coroutinestudy_seongheon"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'

    //for compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material3:material3:1.0.0-beta03"
    implementation "androidx.compose.animation:animation:1.3.0-rc01"
    implementation "androidx.compose.compiler:compiler:1.3.2"
    implementation "androidx.compose.foundation:foundation:1.3.0-rc01"
    implementation "androidx.compose.runtime:runtime:1.3.0-rc01"
    implementation "androidx.compose.runtime:runtime-livedata:1.3.0-rc01"
    implementation "androidx.compose.runtime:runtime-rxjava2:1.3.0-rc01"
    implementation "androidx.activity:activity-compose:1.6.0"
    implementation "androidx.navigation:navigation-compose:2.6.0-alpha02"
    implementation "androidx.compose.ui:ui-viewbinding:1.3.0-beta03"
    implementation "com.github.skydoves:landscapist-glide:1.4.4"


    //for hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.compose.material:material:1.1.1'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    //for retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //for gson
    implementation "com.google.code.gson:gson:$gson_version"

    //for paging
    implementation "androidx.paging:paging-runtime:$paging_version"
    testImplementation "androidx.paging:paging-common:$paging_version"
    implementation "androidx.paging:paging-rxjava2:$paging_version"
    implementation "androidx.paging:paging-rxjava3:$paging_version"
    implementation "androidx.paging:paging-guava:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha17"

    //for compose preview
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //for room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //for workmanager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"
    implementation "androidx.work:work-gcm:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"

    //for test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'app.cash.turbine:turbine:0.6.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories.setFrom(files([mainSrc]))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    classDirectories.setFrom(files([debugTree]))

    executionData.setFrom(fileTree(dir: "${buildDir}/jacoco/testDebugUnitTest.exec"))
}
